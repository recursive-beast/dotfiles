" Load default settings.
source $VIMRUNTIME/defaults.vim

" Install vim-plug if not found.
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Plugins.
call plug#begin()
Plug 'alker0/chezmoi.vim'
Plug 'scrooloose/nerdcommenter'
Plug 'editorconfig/editorconfig-vim'
Plug 'drmikehenry/vim-headerguard'
Plug '42Paris/42header'
{{- if eq .chezmoi.os "darwin" }}
Plug 'ycm-core/YouCompleteMe', { 'do': 'LDFLAGS=\"-L$(brew --prefix)/opt/llvm/lib -Wl,-rpath,$(brew --prefix)/opt/llvm/lib\" CC=clang CXX=clang++ ./install.py --ts-completer --clangd-completer --verbose' }
{{- else }}
Plug 'ycm-core/YouCompleteMe', { 'do': './install.py --clangd-completer --ts-completer --verbose' }
{{- end }}
Plug 'cespare/vim-toml'
Plug 'jiangmiao/auto-pairs'
call plug#end()

" ----------- vim settings -----------
" Enable filetype plugins,
" As nerdcommenter makes use of |commentstring| where possible
" (which is usually set in a filetype plugin).
filetype plugin on
" Disable preview window when auto completing.
set completeopt-=preview
" Show line number before each line.
set number
" Allow hidden buffers.
set hidden

" ----------- plugin settings -----------
" Allow commenting and inverting empty lines.
let g:NERDCommentEmptyLines = 1
" Add spaces after comment delimiters by default.
let g:NERDSpaceDelims = 1
" Add your own custom formats or override the defaults.
let g:NERDCustomDelimiters = {'c': { 'left': '//', 'right': '' }}
" Align line-wise comment delimiters flush left instead of following code indentation.
let g:NERDDefaultAlign = 'left'
" Let clangd fully control code completion.
let g:ycm_clangd_uses_ycmd_caching = 0
" Don't display hover popup automatically.
let g:ycm_auto_hover=''
" Show the completion menu even when typing inside comments.
let g:ycm_complete_in_comments = 1
let g:ycm_semantic_triggers =  {
\	'c': ['re!\w{3}'],
\	'javascript,typescript': ['re!\w{3}'],
\}

" Override vim-headerguard functions to indent #define directives.
function! g:HeaderguardName()
    return toupper(expand('%:t:gs/[^0-9a-zA-Z_]/_/g'))
endfunction
function! g:HeaderguardLine2()
  return "# define " . g:HeaderguardName()
endfunction

" Setup 42header with my 42 school login.
let g:user42 = 'syakoubi'

" ----------- mappings -----------
" Next buffer.
nnoremap <F12> :bn<CR>
" Previous buffer.
nnoremap <S-F12> :bp<CR>
" Toggles the comment state of the selected line(s).
nmap <F9> <leader>c<space>
vmap <F9> <leader>c<space>
" Trigger YCM documentation popup.
nmap <C-h> <plug>(YCMHover)
" YCM 'goto'.
nnoremap <C-g> :YcmCompleter GoTo<CR>
" Rename symbol
nnoremap <F2> yiw:YcmCompleter RefactorRename<space><C-r>"
" Yank rest of the line.
map Y y$
