#!/usr/bin/env bash

set -e

{{ if eq .chezmoi.os "darwin" -}}
echo "brew ------------------------------"
if ! command -v brew &>/dev/null; then
	git clone https://github.com/Homebrew/brew ~/.homebrew
fi
eval "$(~/.homebrew/bin/brew shellenv)"
brew update --force --quiet
brew install -v openssl curl bash-completion
echo
{{- end }}
{{ if eq .chezmoi.os "linux" -}}
echo "apt ------------------------------"
sudo apt update -y
sudo apt install -y bash-completion xclip
echo
{{- end }}

if [ ! -d ~/.bash-git-prompt ]; then
	echo "bash-git-prompt ------------------------------"
	git clone https://github.com/magicmonty/bash-git-prompt.git ~/.bash-git-prompt --depth=1
	echo
fi

if { command -v php && ! command -v composer; } &>/dev/null; then
	echo "composer ------------------------------"
	curl -sS https://getcomposer.org/installer | php
	mv composer.phar ~/.local/bin/composer
	composer config -v -g bin-dir ~/.local/bin
fi
echo

echo "nvm ------------------------------"
if [ ! -d "$NVM_DIR" ]; then
	curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
fi
source "$NVM_DIR/nvm.sh"
nvm install --lts
echo

echo "pyenv ------------------------------"
{{ if eq .chezmoi.os "linux" -}}
if ! command -v pyenv &>/dev/null; then
	git clone https://github.com/pyenv/pyenv.git "$HOME/.pyenv"
	git clone https://github.com/pyenv/pyenv-virtualenv.git "$HOME/.pyenv/plugins/pyenv-virtualenv"
	ln -fs "$HOME/.pyenv/bin/pyenv" ~/.local/bin/pyenv
fi
{{- end }}
{{ if eq .chezmoi.os "darwin" -}}
brew install -v pyenv pyenv-virtualenv
{{- end }}
eval "$(pyenv init -)"
echo

echo "python 3.10.3 enable-shared ------------------------------"
export PYTHON_CONFIGURE_OPTS="--enable-shared"
{{ if eq .chezmoi.os "linux" -}}
sudo apt install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev
{{- end }}
{{ if eq .chezmoi.os "darwin" -}}
brew install openssl readline sqlite3 xz zlib tcl-tk
{{- end }}

pyenv install -v --skip-existing 3.10.3
pyenv global 3.10.3
unset PYTHON_CONFIGURE_OPTS
echo

echo "vim ------------------------------"
{{ if eq .chezmoi.os "linux" -}}
sudo apt install -y vim-nox cmake
{{- end }}
{{ if eq .chezmoi.os "darwin" -}}
brew install -v cmake llvm macvim
brew link -vf llvm
{{- end }}

pip install compiledb
vim  +PlugInstall +qa
echo
